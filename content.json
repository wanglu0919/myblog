{"meta":{"title":"猴哥的Blog","subtitle":null,"description":null,"author":"John Doe","url":"http://yoursite.com"},"pages":[],"posts":[{"title":"Hello World","slug":"hello-world","date":"2018-04-28T02:18:37.000Z","updated":"2018-04-28T02:18:37.000Z","comments":true,"path":"2018/04/28/hello-world/","link":"","permalink":"http://yoursite.com/2018/04/28/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[],"keywords":[]},{"title":"后端标题测试","slug":"http://www.baidu.com","date":"2018-04-28T02:18:37.000Z","updated":"2018-04-28T06:27:47.000Z","comments":false,"path":"2018/04/28/http://www.baidu.com/","link":"","permalink":"http://yoursite.com/2018/04/28/http:/www.baidu.com/","excerpt":"","text":"卧槽我操 asdfasfasfsaf","categories":[{"name":"后端","slug":"后端","permalink":"http://yoursite.com/categories/后端/"}],"tags":[{"name":"区块链","slug":"区块链","permalink":"http://yoursite.com/tags/区块链/"}],"keywords":[{"name":"后端","slug":"后端","permalink":"http://yoursite.com/categories/后端/"}]},{"title":"composer 私服搭建","slug":"php-composer","date":"2018-04-28T02:18:37.000Z","updated":"2019-01-07T06:48:11.000Z","comments":false,"path":"2018/04/28/php-composer/","link":"","permalink":"http://yoursite.com/2018/04/28/php-composer/","excerpt":"","text":"通过https://github.com/composer/satis 的web satisfy 方案进行搭建https://github.com/ludofleury/satisfy 搭建步骤： git clone https://github.com/ludofleury/satisfy /目标地址 修改 docker-compose.yml 如下 1234567891011121314version: &apos;2&apos;services: satisfy: container_name: satisfy build: ./docker volumes: - .:/var/www/satisfy # - ./html:/var/www/html - ./ssh_key:/root/.ssh environment: APP_PATH: /var/www/satisfy ports: - &quot;10003:80&quot; - 修改自动构配置 docker/conf/cron.conf 1* * * * * root /usr/local/bin/php /var/www/satisfy/bin/console satisfy:rebuild /var/www/satisfy/satis.json /var/www/html &gt; /tmp/satis.log 启动服务docker-compose up -d 启动服务访问 homepage 查看 是否正常进入docker 容器，初始话配置 123456789101112131415161718192021222324252627282930 1. 生成ssh key : ssh-keygen -t rsa -C &quot;GitLab&quot; -b 4096 2. 给ssh key 权限： chmod 600 ~/.ssh/id_rsa chmod 600 ~/.ssh/id_rsa.pub chmod 644 ~/.ssh/known_hosts chmod 755 ~/.ssh 3.初始化配置satis.json 文件 &#123; &quot;name&quot;: &quot;Test Composer &quot;, &quot;homepage&quot;: &quot;http:\\/\\/mycomposer.com:10003&quot;, &quot;repositories&quot;: [ ], &quot;require-all&quot;: true, &quot;archive&quot;: &#123; &quot;directory&quot;: &quot;dist&quot;, &quot;format&quot;: &quot;tar&quot;, &quot;skip-dev&quot;: true, &quot;whitelist&quot;: [], &quot;blacklist&quot;: [], &quot;prefix-url&quot;: &quot;http:\\/\\/mycomposer.com:10003\\/&quot;, &quot;checksum&quot;: true &#125;, &quot;config&quot;: &#123;&#125;&#125; ``` * 在docker 容器中执行命令看是否成功执行 root /usr/local/bin/php /var/www/satisfy/bin/console satisfy:rebuild /var/www/satisfy/satis.json /var/www/html &gt; /tmp/satis.log 123456789* 配置 gitlab deploy key 拷贝 ssh_key/id_rsa_pub 内容，添加至gitlab deploy rsa 内容处* 添加仓库代码地址http://mycomposer.com/admin/注意： 添加gitlab 仓库，类型请选择 VCS ，否则无法构建，添加后，等自动构建完成，访问homepage 可以看到生成的package信息* 使用仓库 在项目composer.json中添加 私服地址 配置如下 &quot;repositories&quot;: [{ &quot;type&quot;: &quot;composer&quot;, &quot;url&quot;: &quot;http://mycomposer.com&quot; }] 添加包依赖 &quot;require&quot;: { &quot;test-sdk/test-sdk&quot;: &quot;1.0.0&quot; } 配置 http 允许，否则无法拉去http 私服包 &quot;config&quot; : { &quot;secure-http&quot;: false } 测试 composer update or composer install `","categories":[{"name":"其他","slug":"其他","permalink":"http://yoursite.com/categories/其他/"}],"tags":[{"name":"私服","slug":"私服","permalink":"http://yoursite.com/tags/私服/"}],"keywords":[{"name":"其他","slug":"其他","permalink":"http://yoursite.com/categories/其他/"}]}]}